#!/bin/sh
# 20161025 saintless for Retro-Debian
# GNU GPL v3 applies. No warranty of any kind.
# Includes moded code from examples in linux forums and man pages:
# http://foxyroxylinux.com
# https://github.com/MintPup/DebianDog-Wheezy/tree/master/scripts
# http://stackoverflow.com/questions/226703/how-do-i-prompt-for-input-in-a-linux-shell-script
# 20170417 Remove some bashism, exlude_list function for rsync, some code synchronization with:
# https://github.com/MintPup/Retro-Debian-Sources/blob/master/scripts/frugal-install-grub-legacy

if ! which rsync ; then
echo "Install rsync and run the script again."
exit
fi

if [ "$(whoami)" != "root" ]; then
echo "You have to run this script as Superuser!"
exit
fi

VER=etch     #easy to change with lenny, squeeze, wheezy later (without spaces to add entry properly).
SQFS=01-retro-"$VER".squashfs
WRKD=work-dir-"$VER"

exclude_list () {
echo "/dev
/live
/lib/live/mount
/cdrom
/mnt
/proc
/sys
/media
/run
/tmp
/initrd
/lost+found
/persistence.conf
/var/lib/apt/lists
/var/cache/apt
/var/log
" > /tmp/exclude.txt
}

exclude_list

echo "Removing configuration files left from uninstalled packages."
dpkg --purge "$(dpkg --get-selections | grep deinstall | cut -f1)" 2> /dev/null
echo "Removing downloaded deb files from /var/cache/apt/archives"
apt-get clean
echo

echo System Remaster Retro-"$VER"
echo Remaster the system in new "$SQFS" module.
echo

DRVSALL=$(blkid | sed '/cd\|sd\|sr\|hd\|mm/!d;s,^.*/,,;s," $,,;s,:.*", ,' | grep -E -v "swap|ntfs|vfat|crypt|jfs|loop|sr0|cdrom" | cut -d" " -f1) 
echo "Choose where to create the working directory and the new module."
echo "Must be linux filesystem, NTFS, JFS and FAT filesystems are excluded."
echo "Warning: Debian-Etch is too old and shows ext4 partitions as ext2."
echo "Make sure it is real ext2, ext3 before using the script in Etch."
echo
echo "Unload any extra squashfs modules or they will be included!"
echo "Check for enough free space first by running df -h command!"
echo "This script will not do the check for you!"
echo

echo "Choose from:"
echo "$DRVSALL" /tmp
read -p "Type your choice, like: hda1 or /tmp: " DRV
if ! echo "$DRVSALL" | grep -wo "$DRV"; then
read -p "No drive $DRV, try again: " DRV
	if ! echo "$DRVSALL" | grep -wo "$DRV"; then
read -p "No drive $DRV, last try before exit: " DRV
   if ! echo "$DRVSALL" | grep -wo "$DRV"; then
echo No drive "$DRV", run the script again.
exit
   fi
   fi
fi

echo "$DRV" is your choice.

 if [ "$DRV" = "/tmp" ]; then
DEST=/tmp/"$WRKD"
SFS=/tmp/"$SQFS"
 else
DEST=/media/"$DRV"/"$WRKD"
SFS=/media/"$DRV"/"$SQFS"
mkdir -p /media/"$DRV"
mount /dev/"$DRV" /media/"$DRV"
 fi

 if [ -d "$DEST" ]; then
read -p " $DEST exists, remove it and continue (y/n)? " choose
case "$choose" in
  y|Y ) rm -fr "$DEST";;
  * ) exit;;
esac
 fi

 if [ -f "$SFS" ]; then
read -p " $SFS exists, remove it and continue (y/n)? " choose
case "$choose" in
  y|Y ) rm -fr "$SFS";;
  * ) exit;;
esac
 fi


echo Copying files to "$DEST"... Please, wait...
rsync -avh --progress / "$DEST" --exclude-from /tmp/exclude.txt

cd "$DEST"
mkdir -p dev live lib/live/mount proc run mnt media sys tmp var/lib/apt/lists var/cache/apt/archives var/log/apt var/log/fsck var/log/news var/log/live var/log/ntpstats

cp -a /dev/console "$DEST"/dev
chmod a=rwx,o+t "$DEST"/tmp
mkdir -p "$DEST"/var/lib/apt/lists/partial
cp /var/lib/apt/lists/lock "$DEST"/var/lib/apt/lists
mkdir -p "$DEST"/var/cache/apt/archives/partial
cp /var/cache/apt/archives/lock "$DEST"/var/cache/apt/archives
echo

echo "Cleaning..."
rm -f "$DEST"/var/lib/alsa/asound.state
rm -f "$DEST""$HOME"/.bash_history
rm -f "$DEST""$HOME"/.xsession-errors
rm -rf "$DEST""$HOME"/.cache
rm -rf "$DEST""$HOME"/.thumbnails
rm -f "$DEST"/etc/blkid-cache*
#rm -f "$DEST"/etc/resolv.conf #removing breaks the official resolvconf package functions.
rm -rf "$DEST"/etc/udev/rules.d/70-persistent*
rm -f "$DEST"/var/lib/dhcp/dhclient.eth0.leases
rm -f "$DEST"/var/lib/dhcpcd/*.lease
rm -fr "$DEST"/var/lib/aptitude/*
rm -fr "$DEST"/var/lib/dpkg/updates/tmp.i
rm -fr "$DEST"/var/cache/debconf/*.dat-old
rm -f "$DEST"/etc/blkid.tab
rm -f "$DEST"/etc/blkid.tab.old
rm -rf "$DEST"/var/cache/apt-show-versions/*
rm -fr "$DEST"/var/backups/*
rm -f "$DEST"/var/log/* 2> /dev/null
rm -f "$DEST"/etc/X11/xorg.conf

rm -f "$DEST"/etc/machine-id #Keep in mind problems for some program using this file are possible. Not well tested yet.
touch "$DEST"/etc/machine-id

#Etch section start:
rm -rf "$DEST"/etc/udev/rules.d/z25_persistent*
rm -f "$DEST"/var/lib/dhcp/dhclient.eth0.leases
rm -f "$DEST"/var/lib/dhcpcd/*.lease
rm -fr "$DEST"/var/run/*
rm -fr "$DEST"/var/tmp/*
rm -fr "$DEST"/var/lib/dhcp3/*
rm -f "$DEST""$HOME"/.serverauth*
touch "$DEST"/var/log/dmesg
#Uncomment next 2 lines for Etch:
rm -fr "$DEST"/etc/mtab
touch "$DEST"/etc/mtab
#Etch section end.

rm -f /tmp/exclude.txt

#The zerosize function is from Jbv's  FoxyRoxyLinux remastering script: http://foxyroxylinux.com
zerosize() {
  find $* | while read file; do
    echo "."
    rm -f "$file"
    touch "$file"
  done
}

echo "Zerosizing man, doc, info..."
    zerosize usr/share/doc -type f -size +1c
    zerosize usr/share/doc -type l

    zerosize usr/share/man -type f -size +1c
    zerosize usr/share/man -type l


    zerosize usr/share/info -type f -size +1c
    zerosize usr/share/info -type l

    zerosize usr/share/gnome/help -type f -size +1c
    zerosize usr/share/gnome/help -type l

    zerosize usr/share/gtk-doc -type f -size +1c
    zerosize usr/share/gtk-doc -type l
echo ""

    chown -R man:root usr/share/man
    
  
cd "$HOME"

#Uncomment next 2 lines for Wheezy, Jessie:
#rm -fr "$DEST"/usr/share/doc/elinks
#ln -sf /usr/share/doc/elinks-data "$DEST"/usr/share/doc/elinks #workaround for reinstalling elinks in wheezy and jessie.

read -p "Remove localization files (/usr/share/locale/*) (y/n)?" choose
case "$choose" in
  y|Y ) rm -fr "$DEST"/usr/share/locale/* ;;
  * ) echo "Localization files included.";;
esac

echo
echo "Now you can clean manually $DEST if you like."
echo "After that type y or Y and press Enter to continue."
echo "Other key will skip mksquashfs command."
read -p "Continue making squashfs module (y/n)?" choose
case "$choose" in
  y|Y ) mksquashfs "$DEST" "$SFS";;
  * ) echo "Skipping module creation.";;
esac

echo
read -p "All done. Remove $DEST (y/n)?" choose
case "$choose" in
  y|Y ) rm -rf "$DEST";;
  * ) exit;;
esac

exit

